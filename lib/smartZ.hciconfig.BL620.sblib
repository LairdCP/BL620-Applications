//******************************************************************************
// Laird Technologies (c) 2014
//
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++                                                                      ++
// +++++  When UwTerminal downloads the app it will store it as a filenname   ++
// +++++  which consists of all characters up to the first . and excluding it ++
// +++++                                                                      ++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// This library file provides hciconfig commands to be used by smartZ and should be
// #included into the file 'smartZ.sb' if running on a dual mode module
// e.g. BT900.
//
//******************************************************************************
// Function and Subroutine definitions
//******************************************************************************
//
//
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//		hciconfig letpl		[level]		Get/Set LE transmit power level
//		hciconfig version				Display version information
//		hciconfig leadv  				Enable LE advertising
//		hciconfig noleadv				Disable LE advertising
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
//
//******************************************************************************
// Function and Subroutine definitions
//******************************************************************************
//
//==============================================================================
// Print the hciconfig help menu
//==============================================================================
sub _hciCfgHelp()

	print "Usage:\n"
	print "	hciconfig <command> [command parameters]\n\n"
	print "Commands:\n"
	print "	version				Display version information\n"
	print "	leadv  				Enable LE advertising\n"
	print "	noleadv				Disable LE advertising\n"
	print "	letpl		[level]		Get/Set LE transmit power level\n"
	print "\n"

endsub
//==============================================================================
// Extract the hciconfig command
//==============================================================================
sub _hciCfg()

	// Extract and process hciconfig subcommand

	dim s$, val
	s$ = urtcmd$
	while ExtractStrToken(s$, tkn$)!= 0
		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		if strcmp(tkn$,"help")==0 then
			// Display hciconfig command help menu
			_hciCfgHelp()
			break

		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		elseif strcmp(tkn$, "leadv")==0 then
			// Enable LE adverts
			dim a$
			rc = BleAdvertStart(0,a$,25,0,0)
			AssertResCode(rc)

		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		elseif strcmp(tkn$, "noleadv")==0 then
			// Disable LE adverts
			rc = BleAdvertStop()
			AssertResCode(rc)

		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		elseif strcmp(tkn$, "letpl")==0 then
			// Get/set the LE transmit power level
			if ExtractStrToken(s$, tkn$) == 0  then
				// Display the LE transmit power level
				print "LE transmit power level : ";letpl;"\n"
			else 
				// Set the LE transmit power level
				if strcmp(tkn$,"-")==0 then
					rc = ExtractStrToken(s$, tkn$)
					val = StrValDec(tkn$)
					if (val > 20) then
						print "Invalid power value. Valid range is from -20 to 8 dBm\n"
					else
						letpl = val*-1
					endif
				else
					val = StrValDec(tkn$)
					if (val > 8) then
						print "Invalid power value. Valid range is from -20 to 8 dBm\n"
					else
						letpl =  val
					endif
				endif
				rc = BleTxPowerSet(letpl)
				AssertResCode(rc)
			endif

		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		elseif strcmp(tkn$, "version")==0 then
			// Display version information
			dim fw, W, X, Y, Z
			fw = SYSINFO(3)
			W =  fw >> 26
			X = (fw >> 20) & 0x3F
			Y = (fw >>  6) & 0x3FFF
			Z =  fw  & 0x3F
			print "\nApp Version: smartZ Version ";mjVersion;".";mnVersion;"\n"
			print "Device Name: ";BleGetDeviceName$();"\n"
			print "Firmware: ";W;".";X;".";Y;".";Z;"\n"
			print "Manufacturer: Laird Technologies\n"

		//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

		endif
	endwhile

endsub

//******************************************************************************
// Handler definitions
//******************************************************************************