'//******************************************************************************
'// Laird Technologies (c) 2013
'//
'// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'// +++++                                                                      ++
'// +++++  When UwTerminal downloads the app it will store it as a filenname   ++
'// +++++  which consists of all characters up to the first . and excluding it ++
'// +++++                                                                      ++
'// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'//
'//
'// Simple development board button and LED test
'// Tests the functionality of button 0, button 1, LED 0 and LED 1 on the BL600
'// or BT900 devkit
'//
'// 24/01/2013 Initial version
'//
'//******************************************************************************

'//******************************************************************************
'// Definitions
'//******************************************************************************
#define BT900_DEV_ID            0x42370900 
#define BL600_DEV_ID            0x424C0600
#define BL620_DEV_ID            0x424C0620

'//******************************************************************************
'// Global Variable Declarations
'//******************************************************************************

dim rc                          '// declare rc as integer variable


'//******************************************************************************
'// Library Import
'//******************************************************************************
//------------------------------------------------------------------------------
//** #include the correct GPIO library file for the smartBASIC module being used 
//------------------------------------------------------------------------------
#include "lib\gpio.bl6xx.sblib"
// #include "lib\gpio.bt9xx.sblib"



'//******************************************************************************
'// Function and Subroutine definitions
'//******************************************************************************
'//==============================================================================
'//==============================================================================
sub AssertResCode(byval rc as integer,byval tag as integer)
  if (rc!=0) then
    print "Failed with ";integer.h' rc;" at tag ";tag;"\n"
  endif
endsub



'//******************************************************************************
'// Handler definitions
'//******************************************************************************
function handlerbutton0()
    dim i : i = GpioRead(GPIO_BTN0)
    
    '//if button 0 was pressed
    if i==0 then
        _gpiowrite(GPIO_LED0,1)                         '// turns LED 0 on
        // print "Button 0 has been pressed \n"            '//these lines are printed to the UART when the button is pressed
        // print "LED 0 will light while the button is pressed \n"
        print "\nButton 0 Pressed  : LED 0 ON"
    '//if button 0 was released
    elseif i==1 then
        _gpiowrite(GPIO_LED0,0)                         '//turns LED 1 off
        // print "Button 0 has been released \n"           '//these lines are printed to the UART when the button is released
        // print "LED 0 should now go out \n\n"
        print "\nButton 0 Released : LED 0 OFF"
    endif
endfunc 1


function handlerbutton1()
    dim i : i = GpioRead(GPIO_BTN1)
    
    '//if button 1 was pressed
    if i==0 then
        _gpiowrite(GPIO_LED1,1)                         '// turns LED 0 on
        // print "Button 1 has been pressed \n"            '//these lines are printed to the UART when the button is pressed
        // print "LED 1 will light while the button is pressed \n"
        print "\nButton 1 Pressed  : LED 1 ON"
    '//if button 1 was pressed
    elseif i==1 then
        _gpiowrite(GPIO_LED1,0)                         '//turns LED 1 off
        // print "Button 1 has been released \n"           '//these lines are printed to the UART when the button is released
        // print "LED 1 should now go out \n\n"
        print "\nButton 1 Released : LED 1 OFF"
    endif
endfunc 1



'//******************************************************************************
'// Equivalent to main() in C
'//******************************************************************************
rc = gpiosetfunc(GPIO_BTN0,1,2)                '//sets sio16 (Button 0) as a digital in with a weak pull up resistor
AssertResCode(rc,1000)
rc = gpiosetfunc(GPIO_BTN1,1,2)                '//sets sio17 (Button 1) as a digital in with a weak pull up resistor
AssertResCode(rc,1010)
rc = gpiosetfunc(GPIO_LED0,2,0)                '//sets sio18 (LED0) as a digital out
AssertResCode(rc,1020)
rc = gpiosetfunc(GPIO_LED1,2,0)                '//sets sio19 (LED1) as a digital out
AssertResCode(rc,1030)
rc = gpiobindevent(0,GPIO_BTN0,2)              '//binds a gpio transition high or low to an event. sio16 (button 0)
AssertResCode(rc,1040)
rc = gpiobindevent(1,GPIO_BTN1,2)              '//binds a gpio transition high to an event. sio17 (button 1)
AssertResCode(rc,1050)


onevent evgpiochan0 call handlerbutton0         '//detects when button 0 is pressed or released and calls the function
onevent evgpiochan1 call handlerbutton1         '//detects when button 0 is pressed or released and calls the function


'//Print devkit config info    
select DEV_ID
    print "\nEnsure the DIP switches on CON"
    case BT900_DEV_ID
        print "14 are set as follows:"
        print "\n        OFF      ON"
        print "\nLED0    [1     -->]"
        print "\nLED1    [2     -->]"
        print "\nTempS   [3   x    ]"
        print "\nTrimPot [4   x    ]"
        print "\nx = doesn't matter"
        print "\nPlace a jumper across each of the 2 pin headers below buttons 0 and 1"
    '//BL600 or BL620    
    case else
        print "15 are set as follows:"
        print "\n       OFF      ON"
        print "\n       [1   x    ]"
        print "\nBuzzer [2   x    ]"
        print "\nLED0   [3     -->]"
        print "\nLED1   [4     -->]"
        print "\nx = doesn't matter"
endselect


print "\n\n"

print "Ready to begin button and LED test \n"        '//these lines are printed to the UART when the program is run
print "Please press button 0 or button 1 \n\n"

'//------------------------------------------------------------------------------
'// Wait for a synchronous event.
'// An application can have multiple <WaitEvent> statements
'//------------------------------------------------------------------------------
waitevent                       '//when program is run it waits here until an event is detected
